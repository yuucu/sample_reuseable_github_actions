name: Reusable CI Workflow

on:
  workflow_call:
    inputs:
      node-version:
        description: 'Node.js version to use'
        required: false
        type: string
        default: '18'
      environment:
        description: 'Environment to deploy to'
        required: false
        type: string
        default: 'development'
      run-tests:
        description: 'Whether to run tests'
        required: false
        type: boolean
        default: true
      build-command:
        description: 'Build command to run'
        required: false
        type: string
        default: 'npm run build'
    secrets:
      DEPLOY_TOKEN:
        description: 'Token for deployment'
        required: false
      SLACK_WEBHOOK:
        description: 'Slack webhook for notifications'
        required: false
    outputs:
      build-status:
        description: 'Status of the build'
        value: ${{ jobs.build.outputs.status }}
      artifact-url:
        description: 'URL of the build artifact'
        value: ${{ jobs.build.outputs.artifact-url }}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.build.outputs.status }}
      artifact-url: ${{ steps.upload.outputs.artifact-url }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run linting
        run: npm run lint
        continue-on-error: false
      
      - name: Run tests
        if: ${{ inputs.run-tests }}
        run: npm test
        env:
          CI: true
      
      - name: Build project
        id: build
        run: |
          ${{ inputs.build-command }}
          echo "status=success" >> $GITHUB_OUTPUT
        continue-on-error: false
      
      - name: Upload build artifacts
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ inputs.environment }}-${{ github.sha }}
          path: dist/
          retention-days: 30
      
      - name: Notify on success
        if: success() && secrets.SLACK_WEBHOOK
        run: |
          curl -X POST -H 'Content-type: application/json' \
            --data '{"text":"✅ Build successful for ${{ github.repository }} on ${{ inputs.environment }}"}' \
            ${{ secrets.SLACK_WEBHOOK }}
      
      - name: Notify on failure
        if: failure() && secrets.SLACK_WEBHOOK
        run: |
          curl -X POST -H 'Content-type: application/json' \
            --data '{"text":"❌ Build failed for ${{ github.repository }} on ${{ inputs.environment }}"}' \
            ${{ secrets.SLACK_WEBHOOK }}

  security-scan:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ inputs.environment == 'production' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run security audit
        run: npm audit --audit-level=moderate
      
      - name: Run dependency check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: '${{ github.repository }}'
          path: '.'
          format: 'HTML'
          args: >
            --enableRetired
            --enableExperimental
      
      - name: Upload security report
        uses: actions/upload-artifact@v4
        with:
          name: security-report-${{ github.sha }}
          path: reports/